package org.eientei.yukkispace.protocol.input;

/**
 * User: iamtakingiteasy
 * Date: 2013-08-18
 * Time: 21:21
 *
 * Based on LWJGL KeyboardKeys.java
 */
public class KeyboardKeys {
    public final static byte KEY_NONE            = (byte)0x00;
    public final static byte KEY_ESCAPE          = (byte)0x01;
    public final static byte KEY_1               = (byte)0x02;
    public final static byte KEY_2               = (byte)0x03;
    public final static byte KEY_3               = (byte)0x04;
    public final static byte KEY_4               = (byte)0x05;
    public final static byte KEY_5               = (byte)0x06;
    public final static byte KEY_6               = (byte)0x07;
    public final static byte KEY_7               = (byte)0x08;
    public final static byte KEY_8               = (byte)0x09;
    public final static byte KEY_9               = (byte)0x0A;
    public final static byte KEY_0               = (byte)0x0B;
    public final static byte KEY_MINUS           = (byte)0x0C; /* - on main keyboard */
    public final static byte KEY_EQUALS          = (byte)0x0D;
    public final static byte KEY_BACK            = (byte)0x0E; /* backspace */
    public final static byte KEY_TAB             = (byte)0x0F;
    public final static byte KEY_Q               = (byte)0x10;
    public final static byte KEY_W               = (byte)0x11;
    public final static byte KEY_E               = (byte)0x12;
    public final static byte KEY_R               = (byte)0x13;
    public final static byte KEY_T               = (byte)0x14;
    public final static byte KEY_Y               = (byte)0x15;
    public final static byte KEY_U               = (byte)0x16;
    public final static byte KEY_I               = (byte)0x17;
    public final static byte KEY_O               = (byte)0x18;
    public final static byte KEY_P               = (byte)0x19;
    public final static byte KEY_LBRACKET        = (byte)0x1A;
    public final static byte KEY_RBRACKET        = (byte)0x1B;
    public final static byte KEY_RETURN          = (byte)0x1C; /* Enter on main keyboard */
    public final static byte KEY_LCONTROL        = (byte)0x1D;
    public final static byte KEY_A               = (byte)0x1E;
    public final static byte KEY_S               = (byte)0x1F;
    public final static byte KEY_D               = (byte)0x20;
    public final static byte KEY_F               = (byte)0x21;
    public final static byte KEY_G               = (byte)0x22;
    public final static byte KEY_H               = (byte)0x23;
    public final static byte KEY_J               = (byte)0x24;
    public final static byte KEY_K               = (byte)0x25;
    public final static byte KEY_L               = (byte)0x26;
    public final static byte KEY_SEMICOLON       = (byte)0x27;
    public final static byte KEY_APOSTROPHE      = (byte)0x28;
    public final static byte KEY_GRAVE           = (byte)0x29; /* accent grave */
    public final static byte KEY_LSHIFT          = (byte)0x2A;
    public final static byte KEY_BACKSLASH       = (byte)0x2B;
    public final static byte KEY_Z               = (byte)0x2C;
    public final static byte KEY_X               = (byte)0x2D;
    public final static byte KEY_C               = (byte)0x2E;
    public final static byte KEY_V               = (byte)0x2F;
    public final static byte KEY_B               = (byte)0x30;
    public final static byte KEY_N               = (byte)0x31;
    public final static byte KEY_M               = (byte)0x32;
    public final static byte KEY_COMMA           = (byte)0x33;
    public final static byte KEY_PERIOD          = (byte)0x34; /* . on main keyboard */
    public final static byte KEY_SLASH           = (byte)0x35; /* / on main keyboard */
    public final static byte KEY_RSHIFT          = (byte)0x36;
    public final static byte KEY_MULTIPLY        = (byte)0x37; /* * on numeric keypad */
    public final static byte KEY_LMENU           = (byte)0x38; /* left Alt */
    public final static byte KEY_SPACE           = (byte)0x39;
    public final static byte KEY_CAPITAL         = (byte)0x3A;
    public final static byte KEY_F1              = (byte)0x3B;
    public final static byte KEY_F2              = (byte)0x3C;
    public final static byte KEY_F3              = (byte)0x3D;
    public final static byte KEY_F4              = (byte)0x3E;
    public final static byte KEY_F5              = (byte)0x3F;
    public final static byte KEY_F6              = (byte)0x40;
    public final static byte KEY_F7              = (byte)0x41;
    public final static byte KEY_F8              = (byte)0x42;
    public final static byte KEY_F9              = (byte)0x43;
    public final static byte KEY_F10             = (byte)0x44;
    public final static byte KEY_NUMLOCK         = (byte)0x45;
    public final static byte KEY_SCROLL          = (byte)0x46; /* Scroll Lock */
    public final static byte KEY_NUMPAD7         = (byte)0x47;
    public final static byte KEY_NUMPAD8         = (byte)0x48;
    public final static byte KEY_NUMPAD9         = (byte)0x49;
    public final static byte KEY_SUBTRACT        = (byte)0x4A; /* - on numeric keypad */
    public final static byte KEY_NUMPAD4         = (byte)0x4B;
    public final static byte KEY_NUMPAD5         = (byte)0x4C;
    public final static byte KEY_NUMPAD6         = (byte)0x4D;
    public final static byte KEY_ADD             = (byte)0x4E; /* + on numeric keypad */
    public final static byte KEY_NUMPAD1         = (byte)0x4F;
    public final static byte KEY_NUMPAD2         = (byte)0x50;
    public final static byte KEY_NUMPAD3         = (byte)0x51;
    public final static byte KEY_NUMPAD0         = (byte)0x52;
    public final static byte KEY_DECIMAL         = (byte)0x53; /* . on numeric keypad */
    public final static byte KEY_F11             = (byte)0x57;
    public final static byte KEY_F12             = (byte)0x58;
    public final static byte KEY_F13             = (byte)0x64; /*                     (NEC PC98) */
    public final static byte KEY_F14             = (byte)0x65; /*                     (NEC PC98) */
    public final static byte KEY_F15             = (byte)0x66; /*                     (NEC PC98) */
    public final static byte KEY_F16             = (byte)0x67; /* Extended Function keys - (Mac) */
    public final static byte KEY_F17             = (byte)0x68;
    public final static byte KEY_F18             = (byte)0x69;
    public final static byte KEY_KANA            = (byte)0x70; /* (Japanese keyboard)            */
    public final static byte KEY_F19             = (byte)0x71; /* Extended Function keys - (Mac) */
    public final static byte KEY_CONVERT         = (byte)0x79; /* (Japanese keyboard)            */
    public final static byte KEY_NOCONVERT       = (byte)0x7B; /* (Japanese keyboard)            */
    public final static byte KEY_YEN             = (byte)0x7D; /* (Japanese keyboard)            */
    public final static byte KEY_NUMPADEQUALS    = (byte)0x8D; /* = on numeric keypad (NEC PC98) */
    public final static byte KEY_CIRCUMFLEX      = (byte)0x90; /* (Japanese keyboard)            */
    public final static byte KEY_AT              = (byte)0x91; /*                     (NEC PC98) */
    public final static byte KEY_COLON           = (byte)0x92; /*                     (NEC PC98) */
    public final static byte KEY_UNDERLINE       = (byte)0x93; /*                     (NEC PC98) */
    public final static byte KEY_KANJI           = (byte)0x94; /* (Japanese keyboard)            */
    public final static byte KEY_STOP            = (byte)0x95; /*                     (NEC PC98) */
    public final static byte KEY_AX              = (byte)0x96; /*                     (Japan AX) */
    public final static byte KEY_UNLABELED       = (byte)0x97; /*                        (J3100) */
    public final static byte KEY_NUMPADENTER     = (byte)0x9C; /* Enter on numeric keypad */
    public final static byte KEY_RCONTROL        = (byte)0x9D;
    public final static byte KEY_SECTION         = (byte)0xA7; /* Section symbol (Mac) */
    public final static byte KEY_NUMPADCOMMA     = (byte)0xB3; /* , on numeric keypad (NEC PC98) */
    public final static byte KEY_DIVIDE          = (byte)0xB5; /* / on numeric keypad */
    public final static byte KEY_SYSRQ           = (byte)0xB7;
    public final static byte KEY_RMENU           = (byte)0xB8; /* right Alt */
    public final static byte KEY_FUNCTION        = (byte)0xC4; /* Function (Mac) */
    public final static byte KEY_PAUSE           = (byte)0xC5; /* Pause */
    public final static byte KEY_HOME            = (byte)0xC7; /* Home on arrow keypad */
    public final static byte KEY_UP              = (byte)0xC8; /* UpArrow on arrow keypad */
    public final static byte KEY_PRIOR           = (byte)0xC9; /* PgUp on arrow keypad */
    public final static byte KEY_LEFT            = (byte)0xCB; /* LeftArrow on arrow keypad */
    public final static byte KEY_RIGHT           = (byte)0xCD; /* RightArrow on arrow keypad */
    public final static byte KEY_END             = (byte)0xCF; /* End on arrow keypad */
    public final static byte KEY_DOWN            = (byte)0xD0; /* DownArrow on arrow keypad */
    public final static byte KEY_NEXT            = (byte)0xD1; /* PgDn on arrow keypad */
    public final static byte KEY_INSERT          = (byte)0xD2; /* Insert on arrow keypad */
    public final static byte KEY_DELETE          = (byte)0xD3; /* Delete on arrow keypad */
    public final static byte KEY_CLEAR           = (byte)0xDA; /* Clear key (Mac) */
    public final static byte KEY_LMETA           = (byte)0xDB; /* Left Windows/Option key */
    public final static byte KEY_RMETA           = (byte)0xDC; /* Right Windows/Option key */
    public final static byte KEY_APPS            = (byte)0xDD; /* AppMenu key */
    public final static byte KEY_POWER           = (byte)0xDE;
    public final static byte KEY_SLEEP           = (byte)0xDF;
}
